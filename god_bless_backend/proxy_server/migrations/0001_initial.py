# Generated by Django 5.2.7 on 2025-10-04 10:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProxyServer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("host", models.CharField(max_length=500)),
                ("port", models.IntegerField()),
                ("username", models.CharField(blank=True, max_length=500, null=True)),
                ("password", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "protocol",
                    models.CharField(
                        choices=[
                            ("http", "HTTP"),
                            ("https", "HTTPS"),
                            ("socks4", "SOCKS4"),
                            ("socks5", "SOCKS5"),
                        ],
                        default="http",
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_healthy", models.BooleanField(default=True)),
                ("last_health_check", models.DateTimeField(blank=True, null=True)),
                ("health_check_failures", models.IntegerField(default=0)),
                ("total_requests", models.IntegerField(default=0)),
                ("successful_requests", models.IntegerField(default=0)),
                ("failed_requests", models.IntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_proxies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RotationSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proxy_rotation_enabled", models.BooleanField(default=True)),
                (
                    "proxy_rotation_strategy",
                    models.CharField(
                        choices=[
                            ("round_robin", "Round Robin"),
                            ("random", "Random"),
                            ("least_used", "Least Used"),
                            ("best_performance", "Best Performance"),
                        ],
                        default="round_robin",
                        max_length=20,
                    ),
                ),
                (
                    "proxy_health_check_interval",
                    models.IntegerField(
                        default=300, help_text="Health check interval in seconds"
                    ),
                ),
                (
                    "proxy_max_failures",
                    models.IntegerField(
                        default=3, help_text="Max failures before marking unhealthy"
                    ),
                ),
                ("smtp_rotation_enabled", models.BooleanField(default=True)),
                (
                    "smtp_rotation_strategy",
                    models.CharField(
                        choices=[
                            ("round_robin", "Round Robin"),
                            ("random", "Random"),
                            ("least_used", "Least Used"),
                            ("best_performance", "Best Performance"),
                        ],
                        default="round_robin",
                        max_length=20,
                    ),
                ),
                (
                    "smtp_health_check_interval",
                    models.IntegerField(
                        default=300, help_text="Health check interval in seconds"
                    ),
                ),
                (
                    "smtp_max_failures",
                    models.IntegerField(
                        default=3, help_text="Max failures before marking unhealthy"
                    ),
                ),
                ("delivery_delay_enabled", models.BooleanField(default=True)),
                (
                    "delivery_delay_min",
                    models.IntegerField(
                        default=1, help_text="Minimum delay in seconds"
                    ),
                ),
                (
                    "delivery_delay_max",
                    models.IntegerField(
                        default=5, help_text="Maximum delay in seconds"
                    ),
                ),
                (
                    "delivery_delay_random_seed",
                    models.IntegerField(
                        blank=True,
                        help_text="Random seed for reproducible delays",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rotation_settings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
