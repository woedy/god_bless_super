# Generated by Django 4.2.25 on 2025-10-08 20:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sms_sender', '0004_enhanced_rotation_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServerCapacityWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.CharField(choices=[('proxy', 'Proxy'), ('smtp', 'SMTP')], max_length=10)),
                ('server_id', models.IntegerField(help_text='ID of the proxy or SMTP server')),
                ('capacity_weight', models.FloatField(default=1.0, help_text='Server capacity weight (higher = more capacity)')),
                ('max_concurrent_requests', models.IntegerField(default=100, help_text='Maximum concurrent requests')),
                ('timezone', models.CharField(choices=[('eastern', 'Eastern'), ('central', 'Central'), ('mountain', 'Mountain'), ('pacific', 'Pacific'), ('alaska', 'Alaska'), ('hawaii', 'Hawaii')], default='eastern', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for routing rule matching')),
                ('min_success_rate', models.FloatField(default=80.0, help_text='Minimum success rate to remain active')),
                ('max_response_time', models.FloatField(default=5.0, help_text='Maximum acceptable response time (seconds)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='server_weights', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'server_type'], name='sms_sender__user_id_57b850_idx'), models.Index(fields=['server_type', 'server_id'], name='sms_sender__server__e19b76_idx')],
                'unique_together': {('user', 'server_type', 'server_id')},
            },
        ),
        migrations.CreateModel(
            name='RoutingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Rule name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Rule description')),
                ('conditions', models.JSONField(default=dict, help_text='Conditions for rule matching')),
                ('actions', models.JSONField(default=dict, help_text='Actions to take when rule matches')),
                ('priority', models.IntegerField(default=0, help_text='Rule priority (higher = more important)')),
                ('enabled', models.BooleanField(default=True, help_text='Whether rule is active')),
                ('match_count', models.IntegerField(default=0, help_text='Number of times rule has matched')),
                ('success_count', models.IntegerField(default=0, help_text='Number of successful deliveries using this rule')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routing_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
                'indexes': [models.Index(fields=['user', 'enabled'], name='sms_sender__user_id_371f3b_idx'), models.Index(fields=['-priority'], name='sms_sender__priorit_be76f7_idx')],
            },
        ),
        migrations.CreateModel(
            name='GeographicRoutingPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_codes', models.JSONField(default=list, help_text='Target area codes')),
                ('states', models.JSONField(default=list, help_text='Target states (2-letter codes)')),
                ('timezones', models.JSONField(default=list, help_text='Target timezones')),
                ('preferred_proxy_servers', models.JSONField(default=list, help_text='Preferred proxy server IDs')),
                ('preferred_smtp_servers', models.JSONField(default=list, help_text='Preferred SMTP server IDs')),
                ('strategy', models.CharField(choices=[('closest', 'Closest Geographic Match'), ('performance', 'Best Performance'), ('balanced', 'Balanced Performance and Geography'), ('custom', 'Custom Rules')], default='closest', max_length=20)),
                ('geographic_weight', models.FloatField(default=0.3, help_text='Weight for geographic proximity (0-1)')),
                ('performance_weight', models.FloatField(default=0.7, help_text='Weight for server performance (0-1)')),
                ('enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geographic_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'enabled'], name='sms_sender__user_id_e46c5a_idx')],
            },
        ),
    ]
