{
  "secrets": {
    "SECRET_KEY": {
      "description": "Django secret key (minimum 50 characters)",
      "required": true,
      "generate_command": "python -c \"from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())\"",
      "example": "django-insecure-example-key-replace-with-generated-value"
    },
    "POSTGRES_PASSWORD": {
      "description": "PostgreSQL database password",
      "required": true,
      "generate_command": "openssl rand -base64 32",
      "example": "secure-database-password-32-chars"
    },
    "REDIS_PASSWORD": {
      "description": "Redis cache and message broker password",
      "required": true,
      "generate_command": "openssl rand -base64 24",
      "example": "secure-redis-password-24-chars"
    },
    "EMAIL_HOST_PASSWORD": {
      "description": "SMTP email service password or app password",
      "required": false,
      "note": "Required only if email functionality is needed",
      "example": "your-email-app-password"
    },
    "DJANGO_SUPERUSER_PASSWORD": {
      "description": "Initial admin user password (for first deployment only)",
      "required": false,
      "generate_command": "openssl rand -base64 16",
      "example": "secure-admin-password"
    },
    "FLOWER_PASSWORD": {
      "description": "Celery Flower monitoring interface password",
      "required": false,
      "generate_command": "openssl rand -base64 16",
      "example": "secure-flower-password"
    }
  },
  "environment_variables": {
    "core": {
      "ENVIRONMENT": "production",
      "DEBUG": "false",
      "DJANGO_SETTINGS_MODULE": "god_bless_pro.settings"
    },
    "domains": {
      "ALLOWED_HOSTS": "yourdomain.com,www.yourdomain.com",
      "CORS_ALLOWED_ORIGINS": "https://yourdomain.com,https://www.yourdomain.com",
      "CSRF_TRUSTED_ORIGINS": "https://yourdomain.com,https://www.yourdomain.com"
    },
    "database": {
      "POSTGRES_DB": "god_bless_db",
      "POSTGRES_USER": "god_bless_user",
      "POSTGRES_HOST": "database",
      "POSTGRES_PORT": "5432",
      "USE_POSTGRES": "true",
      "DB_CONN_MAX_AGE": "300",
      "DB_CONN_HEALTH_CHECKS": "true"
    },
    "redis": {
      "REDIS_HOST": "redis",
      "REDIS_PORT": "6379"
    },
    "frontend": {
      "VITE_API_URL": "https://yourdomain.com/api",
      "VITE_WS_URL": "wss://yourdomain.com/ws",
      "VITE_APP_NAME": "God Bless America Platform",
      "VITE_VERSION": "1.0.0",
      "VITE_ENVIRONMENT": "production"
    },
    "security": {
      "SECURE_SSL_REDIRECT": "true",
      "SECURE_PROXY_SSL_HEADER": "HTTP_X_FORWARDED_PROTO,https",
      "USE_TLS": "true",
      "SESSION_COOKIE_SECURE": "true",
      "CSRF_COOKIE_SECURE": "true",
      "SESSION_COOKIE_HTTPONLY": "true",
      "CSRF_COOKIE_HTTPONLY": "true",
      "SESSION_COOKIE_SAMESITE": "Lax",
      "CSRF_COOKIE_SAMESITE": "Lax",
      "SECURE_BROWSER_XSS_FILTER": "true",
      "SECURE_CONTENT_TYPE_NOSNIFF": "true",
      "SECURE_HSTS_SECONDS": "31536000",
      "SECURE_HSTS_INCLUDE_SUBDOMAINS": "true",
      "SECURE_HSTS_PRELOAD": "true"
    },
    "performance": {
      "CACHE_TTL": "300",
      "SESSION_CACHE_ALIAS": "default",
      "STATIC_URL": "/static/",
      "MEDIA_URL": "/media/"
    },
    "logging": {
      "LOG_LEVEL": "INFO",
      "DJANGO_LOG_LEVEL": "INFO",
      "CELERY_LOG_LEVEL": "INFO"
    },
    "backup": {
      "BACKUP_ENABLED": "true",
      "BACKUP_RETENTION_DAYS": "30",
      "BACKUP_SCHEDULE": "0 2 * * *"
    },
    "email": {
      "EMAIL_HOST": "smtp.gmail.com",
      "EMAIL_PORT": "587",
      "EMAIL_USE_TLS": "true",
      "DEFAULT_FROM_EMAIL": "God Bless Platform <noreply@yourdomain.com>"
    },
    "initial_setup": {
      "CREATE_SUPERUSER": "false",
      "DJANGO_SUPERUSER_USERNAME": "admin",
      "DJANGO_SUPERUSER_EMAIL": "admin@yourdomain.com",
      "LOAD_INITIAL_DATA": "false"
    },
    "monitoring": {
      "FLOWER_USER": "admin"
    }
  },
  "deployment_checklist": [
    "Replace 'yourdomain.com' with your actual domain in all variables",
    "Generate secure values for all required secrets",
    "Configure domain and SSL certificates in Coolify",
    "Set CREATE_SUPERUSER=true only for initial deployment",
    "Verify database and Redis services are configured",
    "Test deployment with validate_environment command",
    "Set CREATE_SUPERUSER=false after initial setup",
    "Configure email settings if notifications are needed",
    "Set up monitoring and backup procedures"
  ],
  "validation_commands": [
    "python manage.py validate_environment",
    "python manage.py validate_environment --audit",
    "python manage.py validate_environment --check-connectivity",
    "python manage.py validate_environment --export-template"
  ]
}