version: "3.8"

# Optional monitoring stack for production
# Run with: docker-compose -f docker-compose.prod.yml -f docker-compose.monitoring.yml up -d

services:
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: god_bless_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - god_bless_network

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: god_bless_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - god_bless_network
    depends_on:
      - prometheus

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: god_bless_node_exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - god_bless_network

  # Redis Exporter - Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: god_bless_redis_exporter
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "9121:9121"
    restart: unless-stopped
    networks:
      - god_bless_network
    depends_on:
      - redis

  # Postgres Exporter - PostgreSQL metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: god_bless_postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER:-god_bless_user}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-god_bless_db}?sslmode=disable
    ports:
      - "9187:9187"
    restart: unless-stopped
    networks:
      - god_bless_network
    depends_on:
      - db

  # Nginx Prometheus Exporter
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: god_bless_nginx_exporter
    command:
      - '-nginx.scrape-uri=http://nginx:80/stub_status'
    ports:
      - "9113:9113"
    restart: unless-stopped
    networks:
      - god_bless_network
    depends_on:
      - nginx

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: god_bless_loki
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - god_bless_network

  # Promtail - Log shipper
  promtail:
    image: grafana/promtail:latest
    container_name: god_bless_promtail
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./god_bless_backend/logs:/var/log/backend:ro
      - /var/log:/var/log/host:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - god_bless_network
    depends_on:
      - loki

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

networks:
  god_bless_network:
    external: true
